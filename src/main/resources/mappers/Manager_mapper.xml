<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.comme.manager.ManagerDAO">
	<!-- 전체 검색 -->
	<select id="selectAll" resultType="org.apache.commons.collections4.map.CaseInsensitiveMap" parameterType="map">
		SELECT * 
      FROM (
      SELECT A.*,
      	(SELECT TO_CHAR(blacklist_date, 'YY/MM/DD') FROM blacklist WHERE member_id = A.member_id) AS blacklist_date,
        (SELECT blacklist_content FROM blacklist bk WHERE bk.member_id = A.member_id) AS blacklist_content, ROWNUM RN 
      FROM  (
          SELECT *
          FROM member m
          ) A
      )
         WHERE RN BETWEEN #{start} and #{end}  
	</select>
	<select id="selectAllBlackList" resultType="org.apache.commons.collections4.map.CaseInsensitiveMap" parameterType="map">
		SELECT * 
      FROM (
      SELECT A.*,
        (SELECT member_nickname FROM member WHERE member_id = A.member_id) AS member_nickname,
        (SELECT member_email FROM member WHERE member_id = A.member_id) AS member_email,
        (SELECT member_name FROM member WHERE member_id = A.member_id) AS member_name,
        (SELECT member_phone FROM member WHERE member_id = A.member_id) AS member_phone,
        (SELECT member_grade FROM member WHERE member_id = A.member_id) AS member_grade,
        (SELECT member_brn FROM member WHERE member_id = A.member_id) AS member_brn
        ,ROWNUM RN 
      FROM  (
          (SELECT TO_CHAR(blacklist_date, 'YY/MM/DD') AS blacklist_date, blacklist_content, member_id FROM blacklist bk)
          order by blacklist_date
          ) A
      )
         WHERE RN BETWEEN #{start} and #{end}  
	</select>
	<!-- 키워드 검색 -->
	<select id="search" resultType="org.apache.commons.collections4.map.CaseInsensitiveMap" parameterType="map">
		SELECT * 
      FROM (
      SELECT A.*,
      	(SELECT TO_CHAR(blacklist_date, 'YY/MM/DD') FROM blacklist WHERE member_id = A.member_id) AS blacklist_date,
        (SELECT blacklist_content FROM blacklist bk WHERE bk.member_id = A.member_id) AS blacklist_content, ROWNUM RN 
      FROM  (
          SELECT *
          FROM member m
          where
		<if test="category =='all'">
 			member_id like '%'||#{keyword}||'%'
 			or member_name like '%'||#{keyword}||'%'
 			or member_nickname like '%'||#{keyword}||'%'
 			order by m.member_id
 		</if>
 		<if test="category == 'member_id'">
 			${category} like '%'||#{keyword}||'%'
 			order by m.${category}
 		</if>
 		<if test="category == 'member_name'">
 			${category} like '%'||#{keyword}||'%'
 			order by m.${category}
 		</if>
 		<if test="category == 'member_nickname'">
 			${category} like '%'||#{keyword}||'%'
 			order by m.${category}
 		</if>
          ) A
      )
         WHERE RN BETWEEN #{start} and #{end}
	</select>
	<!-- 등급 검색 -->
	<select id="searchGrade" resultType="org.apache.commons.collections4.map.CaseInsensitiveMap" parameterType="map">
		SELECT * 
      FROM (
      SELECT A.*,
      	(SELECT TO_CHAR(blacklist_date, 'YY/MM/DD') FROM blacklist WHERE member_id = A.member_id) AS blacklist_date,
        (SELECT blacklist_content FROM blacklist bk WHERE bk.member_id = A.member_id) AS blacklist_content, ROWNUM RN 
      FROM  (
          SELECT *
          FROM member m
          where 
 			member_grade=#{member_grade}
          ) A
      )
         WHERE RN BETWEEN #{start} and #{end}
	</select>
	<select id="selectId" resultType="BlackListDTO" parameterType="String">
		select member_id, TO_CHAR(blacklist_date, 'YY/MM/DD') AS blacklist_date, blacklist_content from blacklist where member_id=#{member_id}
	</select>
	<select id="totalCnt" resultType="int">
		select count(*) from member
	</select>
	<select id="searchKeywordCnt" resultType="int" parameterType="map">
		select count(*) as totalCnt from member where 
			<if test="category =='all'">
 				member_id like '%'||#{keyword}||'%'
 				or member_name like '%'||#{keyword}||'%'
 				or member_nickname like '%'||#{keyword}||'%'
 			</if>
 			<if test="category == 'member_id'">
 				${category} like '%'||#{keyword}||'%'
 			</if>
 			<if test="category == 'member_name'">
 				${category} like '%'||#{keyword}||'%'
 			</if>
 			<if test="category == 'member_nickname'">
 				${category} like '%'||#{keyword}||'%'
 			</if>
	</select>
	<select id="searchGradeCnt" resultType="int" parameterType="String">
		select count(*) as totalCnt from member where member_grade=#{member_grade}
	</select>
	<select id="blackListCnt" resultType="int">
		select count(*) as totalCnt from blacklist
	</select>
	
	<update id="modifyGrade" parameterType="map">
		update member set member_grade=#{member_grade} where member_id=#{member_id}
	</update>
	
	<!-- 블랙리스트 기등록 확인 후 insert or update -->
	<insert id="insertBlackList" parameterType="BlackListDTO">
		merge into blacklist using dual on (member_id = #{member_id})
		when matched then 
			update set blacklist_content=#{blacklist_content}, blacklist_date=sysdate
		when not matched then
			insert (member_id, blacklist_content, blacklist_date) values(#{member_id}, #{blacklist_content}, sysdate)
	</insert>
	<delete id="deleteBlackList" parameterType="String">
		delete from blacklist where member_id=#{member_id}
	</delete>
	
	<!-- 상위 카테고리 추가 -->
	<insert id="addMainCategory" parameterType="CategoryDTO">
		<selectKey order="BEFORE" keyProperty="seq_category" resultType="int">
			select seq_category.nextval from dual
		</selectKey>
		insert into category values(#{seq_category}, #{category_name}, null)
	</insert>
	
	<!-- 하위 카테고리 추가 -->
	<insert id="addSubCategory" parameterType="CategoryDTO">
		<selectKey order="BEFORE" keyProperty="seq_category" resultType="int">
			select seq_category.nextval from dual
		</selectKey>
		insert into category values(#{seq_category}, #{category_name}, #{category_pk})
	</insert>
	
	<!-- 카테고리 삭제 -->
	<delete id="deleteCategory" parameterType="int">
		delete from category where seq_category = #{seq_category}
	</delete>
	
	<!-- 카테고리 이름 수정 -->
	<update id="modifyCategory" parameterType="CategoryDTO">
		update category set category_name = #{category_name} where seq_category = #{seq_category}
	</update>
	
	<!-- 총 후원 갯수 세기 -->
	<select id="countPay" parameterType="map" resultType="int">
		select count(seq_pay) FROM pay P, support_board S WHERE P.seq_board = S.seq_BOARD
		<if test="search_keyword != null ">
         	<if test="search_type == 'MEMBER_ID' or search_type == 'writer_nickname' ">
         		and s.${search_type} LIKE '%'|| #{search_keyword} ||'%'
         	</if>
         	<if test="search_type == 'member_id' ">
         		and p.${search_type} LIKE '%'|| #{search_keyword} ||'%'
         	</if>
        </if>
	</select>
	
	<!-- 사용자가 후원한 후원내역 -->
	<select id="userPayList" parameterType="map" resultType="map">
		SELECT * 
		FROM (
		SELECT A.*, ROWNUM RN
		FROM  (
		    SELECT  p.seq_pay, p.seq_board, s.board_title, p.member_id, s.member_id as shelter_id, s.writer_nickname ,p.pay_money, p.pay_date
		    FROM pay P, support_board S
		        WHERE P.seq_board = S.seq_BOARD
        <if test="search_type == 'MEMBER_ID' or search_type == 'writer_nickname' ">
         		and s.${search_type} LIKE '%'|| #{search_keyword} ||'%'
        </if>
        <if test="search_type == 'member_id' or search_type == 'seq_board'">
         		and p.${search_type} LIKE '%'|| #{search_keyword} ||'%'
         </if>
        order by P.seq_pay desc 
		    ) A
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 조회 된 결과에 따른 총 금액 -->
	<select id="searchMoney" parameterType="map" resultType="int">
		select sum(pay_money) from pay p, support_board S
	    where P.seq_board = S.seq_BOARD
	    <if test="search_type == 'MEMBER_ID' or search_type == 'writer_nickname' ">
         		and s.${search_type} LIKE '%'|| #{search_keyword} ||'%'
        </if>
        <if test="search_type == 'member_id' or search_type == 'seq_board'">
         		and p.${search_type} LIKE '%'|| #{search_keyword} ||'%'
         </if>
	</select>
	
</mapper>